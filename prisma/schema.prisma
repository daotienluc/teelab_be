generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model product_type {
  product_type_id Int        @id @default(autoincrement())
  product_name    String?    @db.VarChar(255)
  description     String?    @db.VarChar(255)
  created_at      DateTime?  @default(now()) @db.Timestamp(0)
  updated_at      DateTime?  @default(now()) @db.Timestamp(0)
  products        products[]
}

model products {
  product_id      Int           @id @default(autoincrement())
  product_name    String?       @db.VarChar(255)
  price           Float?        @db.Float
  material        String?       @db.VarChar(255)
  form            String?       @db.VarChar(255)
  color           String?       @db.VarChar(255)
  design          String?       @db.VarChar(255)
  product_type_id Int?
  image           String?       @db.VarChar(255)
  user_id         Int?
  description     String?       @db.VarChar(255)
  created_at      DateTime?     @default(now()) @db.Timestamp(0)
  updated_at      DateTime?     @default(now()) @db.Timestamp(0)
  orderDetail     orderDetail[]
  product_type    product_type? @relation(fields: [product_type_id], references: [product_type_id], onDelete: NoAction, onUpdate: NoAction, map: "products_ibfk_1")
  users           users?        @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "products_ibfk_2")

  @@index([product_type_id], map: "product_type_id")
  @@index([user_id], map: "user_id")
}

model users {
  user_id         Int        @id @default(autoincrement())
  userName        String?    @db.VarChar(255)
  phone           String?    @db.VarChar(255)
  email           String?    @db.VarChar(255)
  password        String?    @db.VarChar(255)
  avata           String?    @db.VarChar(1000)
  facebook_app_id String?    @db.VarChar(255)
  google_app_id   String?    @db.VarChar(255)
  role_id         Int        @default(2)
  description     String?    @db.VarChar(255)
  created_at      DateTime?  @default(now()) @db.Timestamp(0)
  updated_at      DateTime?  @default(now()) @db.Timestamp(0)
  orders          orders[]
  products        products[]
  roles           roles      @relation(fields: [role_id], references: [role_id], onDelete: NoAction, onUpdate: NoAction, map: "users_ibfk_1")

  @@index([role_id], map: "role_id")
}

model discounts {
  discount_id         Int       @id @default(autoincrement())
  date_start          DateTime? @default(now()) @db.Timestamp(0)
  date_end            DateTime? @default(now()) @db.Timestamp(0)
  name_discount       String?   @db.VarChar(255)
  description         String?   @db.VarChar(255)
  discount_percentage String?   @db.VarChar(255)
  created_at          DateTime? @default(now()) @db.Timestamp(0)
  updated_at          DateTime? @default(now()) @db.Timestamp(0)
  orders              orders[]
}

model orderDetail {
  order_detail_id Int       @id @default(autoincrement())
  quantity        Int?
  product_id      Int?
  order_id        Int?
  created_at      DateTime? @default(now()) @db.Timestamp(0)
  updated_at      DateTime? @default(now()) @db.Timestamp(0)
  products        products? @relation(fields: [product_id], references: [product_id], onDelete: NoAction, onUpdate: NoAction, map: "orderDetail_ibfk_1")
  orders          orders?   @relation(fields: [order_id], references: [order_id], onDelete: NoAction, onUpdate: NoAction, map: "orderDetail_ibfk_2")

  @@index([order_id], map: "order_id")
  @@index([product_id], map: "product_id")
}

model orders {
  order_id    Int           @id @default(autoincrement())
  description String?       @db.VarChar(255)
  user_id     Int?
  discount_id Int?
  created_at  DateTime?     @default(now()) @db.Timestamp(0)
  updated_at  DateTime?     @default(now()) @db.Timestamp(0)
  orderDetail orderDetail[]
  discounts   discounts?    @relation(fields: [discount_id], references: [discount_id], onDelete: NoAction, onUpdate: NoAction, map: "orders_ibfk_1")
  users       users?        @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "orders_ibfk_2")

  @@index([discount_id], map: "discount_id")
  @@index([user_id], map: "user_id")
}

model permissions {
  permission_id    Int                @id @default(autoincrement())
  name             String             @db.VarChar(255)
  endpoint         String             @db.VarChar(255)
  method           String             @db.VarChar(255)
  module           String             @db.VarChar(255)
  created_at       DateTime?          @default(now()) @db.Timestamp(0)
  updated_at       DateTime?          @default(now()) @db.Timestamp(0)
  role_permissions role_permissions[]
}

model role_permissions {
  role_permissions_id Int         @id @default(autoincrement())
  role_id             Int
  permission_id       Int
  is_active           Boolean     @default(true)
  created_at          DateTime?   @default(now()) @db.Timestamp(0)
  updated_at          DateTime?   @default(now()) @db.Timestamp(0)
  roles               roles       @relation(fields: [role_id], references: [role_id], onDelete: NoAction, onUpdate: NoAction, map: "role_permissions_ibfk_1")
  permissions         permissions @relation(fields: [permission_id], references: [permission_id], onDelete: NoAction, onUpdate: NoAction, map: "role_permissions_ibfk_2")

  @@index([permission_id], map: "permission_id")
  @@index([role_id], map: "role_id")
}

model roles {
  role_id          Int                @id @default(autoincrement())
  name             String?            @db.VarChar(255)
  description      String?            @db.VarChar(255)
  is_active        Boolean?
  created_at       DateTime?          @default(now()) @db.Timestamp(0)
  updated_at       DateTime?          @default(now()) @db.Timestamp(0)
  role_permissions role_permissions[]
  users            users[]
}
